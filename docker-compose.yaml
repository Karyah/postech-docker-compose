version: '3.8'

services:
  postgres_msestoque:
    container_name: postgres_msestoque
    image: postgres:16
    restart: always
    networks:
      - app-net
    environment:
      POSTGRES_DB: estoquedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  msestoque:
    container_name: msestoque
    image: aisakatfpn/msestoque:1.1
    restart: always
    depends_on:
      - postgres_msestoque
    networks:
      - app-net
    ports:
      - "8086:8086"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_msestoque:5432/estoquedb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password

  mysql_msproduto:
    container_name: mysql_msproduto
    image: mysql:8.0
    restart: always
    networks:
      - app-net
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: produtosdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"      

  msproduto:
    container_name: msproduto
    image: aisakatfpn/msproduto:1.0
    restart: always
    depends_on:
      - mysql_msproduto
    networks:
      - app-net
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_msproduto:3306/produtosdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    networks:
      - app-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.4.0
    networks:
      - app-net
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  mongo_mspedido:
    container_name: mongo_mspedido
    image: mongo:6.0
    restart: always
    networks:
      - app-net
    ports:
      - "27017:27017"

  mspedido:
    container_name: mspedido
    image: anacsilva/app-pedido:3.1
    restart: always
    depends_on:
      - mongo_mspedido
      - kafka
    networks:
      - app-net
    ports:
      - "8083:8083"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo_mspedido:27017/mspedidos

  mspedido-receiver:
    container_name: mspedido-receiver
    image: anacsilva/app-pedido-receiver:1.0
    networks:
      - app-net
    depends_on:
      - kafka
    ports:
      - "8084:8084"

  postgres_mscliente:
    container_name: postgres_mscliente
    image: postgres:16
    restart: always
    networks:
      - app-net
    environment:
      POSTGRES_DB: clientedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    depends_on:
      - kafka

  mscliente:
    container_name: mscliente
    image: luskafer/ms-cliente-service:1.0
    restart: always
    depends_on:
      - postgres_mscliente
    networks:
      - app-net
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_mscliente:5432/clientedb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password

  postgres_mspagamento:
    container_name: postgres_mspagamento
    image: postgres:16
    restart: always
    networks:
      - app-net
    environment:
      POSTGRES_DB: pagamentodb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"

  mspagamento:
    container_name: mspagamento
    image: rseite/app-pagamento:2.1
    restart: always
    depends_on:
      - postgres_mspagamento
    networks:
      - app-net
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_mspagamento:5432/pagamentodb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password

networks:
  app-net:
   driver: bridge